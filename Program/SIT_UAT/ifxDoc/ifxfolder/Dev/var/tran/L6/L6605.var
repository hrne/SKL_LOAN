----- BASIC LABEL Variables ----------
<sub type="SYS">
</sub>

<sub type="SYS" name="label">

![一段式/二段式/三段式]
!#RELCD=_,_,S
!E(0,1)

!#ACTFG=_,_,S
!E(0,1)

</sub>

<sub type="DC" name="BFHEAD">
<include src="COM.icf::BFHEAD2.dec"/>
!起始交易記號  0:起始交易,1:非起始交易
#ORGFG=_,_,S
E(0,0)
</sub>

!---------- 交易畫面及個別交易變數宣告 ----------
<sub type="DC" name="p1" layout="cols=1;screen.width=[150,850];printer.width=[20,20];">
[
["[L6605]                                 逾期新增減少原因維護"],
["#FdFuncCode+功能",#FuncCodeX],
["#FdOverdueSign+逾期增減碼",#OverdueSign],
["#FdOverdueCode+增減原因代號",#OverdueCode],
["#FdOverdueItem+增減原因說明",#OverdueItem],
]
!---------- AP Button AREA ----------
![Buttom資料查詢]
!#BUF1=X,42,S

! 必輸欄位

! 永遠為必輸欄位
#FdFuncCode=X,2,L
T(3,*)
#FdOverdueSign=X,2,L
T(3,*)
#FdOverdueCode=X,2,L
T(3,*)
#FdOverdueItem=X,2,L
T(3,*)

!---------- AP TEXT AREA Variables ----------
<include src="HELPRIM.icf::HELPRIM.rtn"/>

!FuncCode2(1:新增;2:修改;4:刪除)
#CODEFuncCode2=x,20,S                  
T(3,CdCode.FuncCode2)                  
#FuncCode2Help=x,50,S     

#HelpRim=X,1,S
RESET_RIM(#HelpRim,XXR99)
S(XXR99,01,#CODEFuncCode2)
R(1,XXR99)
CALL(#HelpProc)
T(2,@FuncCode2Help,#HelpDesc1)

! 逾期增減碼
#OverdueSignH=x,50,S
T(3,1:新增;2:減少)

#CHAIN=A,1,S
T(4,CHAIN$)
T(2,@RimTxCode,#TXCD)
IF(#CHAIN!=1,V(P,此為連動交易，請從交易:L6065進入),$)

#NTXBUF=X,106,S
C(3,#CHAIN,1,T(4,NTXBUF$),S)

#CHAIN_FuncCode=X,1,S
T(1,#NTXBUF,1,1)

#CHAIN_OverdueSign=X,1,S
T(1,#NTXBUF,2,1)

#CHAIN_OverdueCode=X,4,S
T(1,#NTXBUF,3,4)

#CHAIN_OverdueItem=x,100,S
T(1,#NTXBUF,7,100)

#CHAINSET=X,1,S
C(3,#CHAIN,1,$,S)
T(2,@FuncCode,#CHAIN_FuncCode)
C(3,#FuncCode,1,S,$)
T(2,@OverdueSign,#CHAIN_OverdueSign)
T(2,@OverdueCode,#CHAIN_OverdueCode)
T(2,@OverdueItem,#CHAIN_OverdueItem)


! 功能 必須輸入(1: 新增;2: 修改;4: 刪除)
#FuncCode=A,1,S
T(F,@FuncCode,0)
C(3,#CHAIN,1,s,$)
HELP(#FuncCode2Help)
@V(H,#FuncCode2Help)

#FuncCodeX=X,12,L
T(H,#FuncCode,#FuncCode2Help)
C(2,#FuncCode,$,K(MODIFYBUTTON,新增),K(MODIFYBUTTON,修改),$,K(MODIFYBUTTON,刪除))

!刪除隱藏重新交易按鈕
#AGAIN=X,1,S
IF(#FuncCode==4 || #FuncCode==2,$,S)
E(0,1)ASGN(AGAIN$)

#FUNCIND=_,_,S
E(0,#FuncCode)
<include src="COM.icf::CheckAuth.rtn"/>


!FuncCode=1,2 顯示框線
#WKTF=X,1,S
IF (#FuncCode==1 || #FuncCode==2 ,T(F,@OverdueItem,1),T(F,@OverdueItem,0))
IF (#FuncCode==1 ,T(F,@OverdueSign,1)T(F,@OverdueCode,1),
                  T(F,@OverdueSign,0)T(F,@OverdueCode,0))

#WKPSC=X,2,S

#WKSTAR1=X,2,S
C(2,#FuncCode,S,T(3,*),S,S,S,S)

#WKSTAR2=X,2,S
C(2,#FuncCode,S,T(3,*),T(3,*),S,S,S)

#WKNAME=X,1,S
C(3,#CHAIN,1,T(2,@FdFuncCode,#WKPSC),T(2,@FdFuncCode,#WKSTAR2))
C(3,#CHAIN,1,T(2,@FdOverdueSign,#WKSTAR1),T(2,@FdOverdueSign,#WKSTAR2))
C(3,#CHAIN,1,T(2,@FdOverdueCode,#WKSTAR1),T(2,@FdOverdueCode,#WKSTAR2))
T(2,@FdOverdueItem,#WKSTAR2)

! 逾期增減碼
#OverdueSign=A,1,I
C(3,#CHAIN,1,C(2,#FuncCode,$,$,s,$,s,s),$)
HELP(#OverdueSignH)
@V(H,#OverdueSignH)

! 增減原因代號
#OverdueCode=A,4,I
C(3,#CHAIN,1,C(2,#FuncCode,$,$,s,$,s,s),$)
@V(7)

#SendL6R07=X,1,S
E(0,@RimFuncCode,#FuncCode)
E(0,@RimOverdueSign,#OverdueSign)
E(0,@RimOverdueCode,#OverdueCode)
RESET_RIM(#SendL6R07,L6R07)
S(L6R07,1,#RimFuncCode,#RimTxCode,#RimOverdueSign,#RimOverdueCode)
R(1,L6R07)

#RL6R07=X,1,S
C(3,#FuncCode,1,s,$)
T(2,@OverdueItem,#L6R07OverdueItem)

! 增減原因說明
#OverdueItem=x,100,I
C(2,#FuncCode,$,$,$,$,s,s)
@V(7)

#RPTFG=A,1,S
E(0,0)

!參考編號
#MRKEY=_,_,S
T(2,#OverdueSign+-+#OverdueCode)

<include src="ROM.icf::L0Rim.dec"/>
<include src="ROM.icf::L6R07Rim.dec"/>
<include src="ROM.icf::L6R07.dec"/>
</sub>

!---------- 輸出共用變數宣告區 ----------
<sub type="RTN" name="AFXMT">
<include src="PRT.icf::PRTHEAD.rtn"/>
</sub>

!---------- TXFORM = L6605 ----------
<sub type="FORM" name="L6605">

#SCRPRT=_,_,S
C(5,#TXFORM,L6605,$,S)

#SCRTIL=_,_,S
T(3,[L6605] 逾期新增減少原因維護)

</sub>


!------ 上行電文 ------
<sub type="TIM">
#FuncCode#OverdueSign#OverdueCode#OverdueItem
#END
</sub>


!------ 下行電文TOM ------
<sub type="TOM">

TXFORM=L6605

^

<include src="COM.icf::TRCTL.tom"/>
<include src="ROM.icf::L6R07.tom"/>
<include src="HELPRIM.icf::HELPRIM.tom"/>
</sub>


!---------- 單據輸出組合 ----------
<sub type="SELECT">
<include src="PRT.icf::UPD01.sel"/>
</sub>
